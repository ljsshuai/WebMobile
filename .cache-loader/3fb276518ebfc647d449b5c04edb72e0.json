{"remainingRequest":"F:\\webMobile\\node_modules\\babel-loader\\lib\\index.js?cacheDirectory!F:\\webMobile\\client\\actions\\index.redux.js","dependencies":[{"path":"F:\\webMobile\\client\\actions\\index.redux.js","mtime":1537491948464},{"path":"F:\\webMobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537511528663},{"path":"F:\\webMobile\\node_modules\\babel-loader\\lib\\index.js","mtime":1530808242000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nexports.userLogin = userLogin;\nexports.login = login;\nexports.loginFn = loginFn;\nexports.article = article;\nexports.ArticleFn = ArticleFn;\nexports.websiteFn = websiteFn;\nexports.userFn = userFn;\nexports.accessFn = accessFn;\nexports.roleFn = roleFn;\nexports.refund = refund;\nexports.aboutUs = aboutUs;\nexports.aboutUsFn = aboutUsFn;\nexports.loginout = loginout;\n\nvar _createHashHistory = require('history/createHashHistory');\n\nvar _createHashHistory2 = _interopRequireDefault(_createHashHistory);\n\nvar _fetch = require('../component/fetch');\n\nvar _fetch2 = _interopRequireDefault(_fetch);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function () {\n    var enterModule = require('react-hot-loader').enterModule;\n\n    enterModule && enterModule(module);\n})();\n\nvar Login = 'login';\nvar LoginOut = 'loginOut';\n\nvar history = (0, _createHashHistory2.default)();\nvar initData = {\n    token: localStorage.getItem('token'),\n    isLogin: localStorage.getItem('isLogin'),\n    user: 'lili',\n    tableData: [],\n    tableDataUs: [],\n    websitetableData: [],\n    websitetotal: 0,\n    usertableData: [],\n    accesstableData: [],\n    frontQuerytableData: [],\n    accesstotal: 0,\n    roletableData: [],\n    roletotal: 0,\n    usertotal: 0,\n    roleAccess: localStorage.getItem('roleAccess') ? JSON.parse(localStorage.getItem('roleAccess')) : null,\n    total: 0,\n    _token: localStorage.getItem('_token')\n};\n\nconsole.dir(history);\nif (initData.isLogin) {\n    // fetch\n    // var formData = new FormData();\n    // formData.append('token', initUser.token);\n    // var opts = {\n    //     method: \"POST\", //请求方法\n    //     body: formData, //请求体\n    //     credentials: 'include'\n    // }\n    // fetch('http://43.246.214.1/zjh/admin/info/q', opts).then(res => {\n    //     return res.json();\n    // }).then(resData => {\n    //     if (resData.status > 650) {\n    //         initUser.isLogin = false;\n    //         history.push('./')\n    //     }\n    // }).catch((error) => {\n    //     initUser.isLogin = false;\n    //     history.push('./')\n    // })\n}\n\nfunction userLogin() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initData;\n    var action = arguments[1];\n\n    switch (action.type) {\n        case Login:\n            localStorage.setItem('isLogin', true);\n            localStorage.setItem('_token', action.userdata.data.token);\n            localStorage.setItem('roleAccess', (0, _stringify2.default)(action.userdata.data.roleAccess));\n            return (0, _assign2.default)(state, { roleAccess: action.userdata.data.roleAccess, isLogin: true, _token: action.userdata.data.token, token: action.userdata, user: action.userdata.data._id });\n        case LoginOut:\n            localStorage.clear();\n            return { isLogin: false };\n        case 'article':\n            if (action.tableData.status === 'ok') {\n\n                return (0, _assign2.default)(state, { tableData: action.tableData.data.listdata, total: action.tableData.data.total });\n            } else {\n                localStorage.clear();\n                return (0, _assign2.default)(state, { isLogin: false });\n            }\n        case 'website':\n            if (action.tableData.status === 'ok') {\n                console.log(action.tableData.data.data, 'website');\n                return (0, _assign2.default)(state, { websitetableData: action.tableData.data.listdata, websitetotal: action.tableData.data.total });\n            } else {\n                localStorage.clear();\n                return (0, _assign2.default)(state, { isLogin: false });\n            }\n        case 'websitefrontQuery':\n            if (action.tableData.status === 'ok') {\n                console.log(action.tableData.data.data, 'websitefrontQuery');\n                return (0, _assign2.default)(state, { frontQuerytableData: action.tableData.data.listdata, websitetotal: action.tableData.data.total });\n            } else {\n                localStorage.clear();\n                return (0, _assign2.default)(state, { isLogin: false });\n            }\n        case 'editPassword':\n            if (action.tableData.status === 'ok') {\n                console.log(action.tableData.data.data, 'user');\n                return (0, _assign2.default)(state, { usertableData: action.tableData.data.listdata, usertotal: action.tableData.data.total });\n            } else {\n                localStorage.clear();\n                return (0, _assign2.default)(state, { isLogin: false });\n            }\n        case 'access':\n            if (action.tableData.status === 'ok') {\n                console.log(action.tableData.data.data, 'access');\n                return (0, _assign2.default)(state, { accesstableData: action.tableData.data.listdata, accesstotal: action.tableData.data.total });\n            } else {\n                localStorage.clear();\n                return (0, _assign2.default)(state, { isLogin: false });\n            }\n        case 'role':\n            if (action.tableData.status === 'ok') {\n                console.log(action.tableData.data.data, 'role');\n                return (0, _assign2.default)(state, { roletableData: action.tableData.data.listdata, roletotal: action.tableData.data.total });\n            } else {\n                localStorage.clear();\n                return (0, _assign2.default)(state, { isLogin: false });\n            }\n\n        default:\n            return state;\n    }\n}\n\nfunction login(userdata) {\n    return { type: Login, userdata: userdata };\n}\nfunction loginFn(resdata) {\n    return function (dispatch) {\n        return new _promise2.default(function (resolve, reject) {\n            (0, _fetch2.default)('userLogin', { 'name': resdata.loginName, 'password': resdata.password }).then(function (data) {\n                if (data.status === 'ok') dispatch(login(data));\n                resolve(data);\n            });\n        });\n    };\n}\nfunction article(data) {\n    return { type: 'article', tableData: data };\n}\nfunction ArticleFn(type, formValue) {\n    return function (dispatch) {\n        return new _promise2.default(function (resolve, reject) {\n            (0, _fetch2.default)('article', (0, _assign2.default)({ type: type }, formValue)).then(function (data) {\n                type === 'delete' ? null : dispatch(article(data));\n                resolve(data);\n            });\n        });\n    };\n}\nfunction websiteFn(type, formValue) {\n    return function (dispatch) {\n        return new _promise2.default(function (resolve, reject) {\n            (0, _fetch2.default)('webSite', (0, _assign2.default)({ type: type }, formValue)).then(function (data) {\n                if (type === 'frontQuery') {\n                    type === 'delete' ? null : dispatch({ type: 'websitefrontQuery', tableData: data });\n                } else {\n                    type === 'delete' ? null : dispatch({ type: 'website', tableData: data });\n                }\n                resolve(data);\n            });\n        });\n    };\n}\nfunction userFn(type, formValue) {\n    return function (dispatch) {\n        return new _promise2.default(function (resolve, reject) {\n            (0, _fetch2.default)('editPassword', (0, _assign2.default)({ type: type }, formValue)).then(function (data) {\n                type === 'delete' ? null : dispatch({ type: 'editPassword', tableData: data });\n                resolve(data);\n            });\n        });\n    };\n}\n\nfunction accessFn(type, formValue) {\n    return function (dispatch) {\n        return new _promise2.default(function (resolve, reject) {\n            (0, _fetch2.default)('access', (0, _assign2.default)({ type: type }, formValue)).then(function (data) {\n                type === 'delete' ? null : dispatch({ type: 'access', tableData: data });\n                resolve(data);\n            });\n        });\n    };\n}\nfunction roleFn(type, formValue) {\n    return function (dispatch) {\n        return new _promise2.default(function (resolve, reject) {\n            (0, _fetch2.default)('role', (0, _assign2.default)({ type: type }, formValue)).then(function (data) {\n                type === 'delete' ? null : dispatch({ type: 'role', tableData: data });\n                resolve(data);\n            });\n        });\n    };\n}\n\nfunction refund(data) {\n    return function (dispatch) {\n        return new _promise2.default(function (resolve, reject) {\n            (0, _fetch2.default)(data.bank_type === '支付宝' ? 'zfbRefund' : 'refund', (0, _assign2.default)({ data: (0, _stringify2.default)(data), _token: initData._token }, {})).then(function (data) {\n                // type==='delete'?null:dispatch({ type: 'refund', refundData: data })\n                resolve(data);\n            });\n        });\n    };\n}\n\nfunction aboutUs(data) {\n    return { type: 'AboutUs', tableData: data };\n}\nfunction aboutUsFn(type, formValue) {\n    return function (dispatch) {\n        return new _promise2.default(function (resolve, reject) {\n            (0, _fetch2.default)('AboutUs', (0, _assign2.default)({ type: type }, formValue)).then(function (data) {\n                type === 'delete' ? null : dispatch(aboutUs(data));\n                resolve(data);\n            });\n        });\n    };\n}\n\nfunction loginout() {\n    return { type: LoginOut };\n}\n;\n\n(function () {\n    var reactHotLoader = require('react-hot-loader').default;\n\n    var leaveModule = require('react-hot-loader').leaveModule;\n\n    if (!reactHotLoader) {\n        return;\n    }\n\n    reactHotLoader.register(Login, 'Login', 'F:/webMobile/client/actions/index.redux.js');\n    reactHotLoader.register(LoginOut, 'LoginOut', 'F:/webMobile/client/actions/index.redux.js');\n    reactHotLoader.register(history, 'history', 'F:/webMobile/client/actions/index.redux.js');\n    reactHotLoader.register(initData, 'initData', 'F:/webMobile/client/actions/index.redux.js');\n    reactHotLoader.register(userLogin, 'userLogin', 'F:/webMobile/client/actions/index.redux.js');\n    reactHotLoader.register(login, 'login', 'F:/webMobile/client/actions/index.redux.js');\n    reactHotLoader.register(loginFn, 'loginFn', 'F:/webMobile/client/actions/index.redux.js');\n    reactHotLoader.register(article, 'article', 'F:/webMobile/client/actions/index.redux.js');\n    reactHotLoader.register(ArticleFn, 'ArticleFn', 'F:/webMobile/client/actions/index.redux.js');\n    reactHotLoader.register(websiteFn, 'websiteFn', 'F:/webMobile/client/actions/index.redux.js');\n    reactHotLoader.register(userFn, 'userFn', 'F:/webMobile/client/actions/index.redux.js');\n    reactHotLoader.register(accessFn, 'accessFn', 'F:/webMobile/client/actions/index.redux.js');\n    reactHotLoader.register(roleFn, 'roleFn', 'F:/webMobile/client/actions/index.redux.js');\n    reactHotLoader.register(refund, 'refund', 'F:/webMobile/client/actions/index.redux.js');\n    reactHotLoader.register(aboutUs, 'aboutUs', 'F:/webMobile/client/actions/index.redux.js');\n    reactHotLoader.register(aboutUsFn, 'aboutUsFn', 'F:/webMobile/client/actions/index.redux.js');\n    reactHotLoader.register(loginout, 'loginout', 'F:/webMobile/client/actions/index.redux.js');\n    leaveModule(module);\n})();\n\n;",null]}